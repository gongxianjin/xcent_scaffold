basePath: /
definitions:
  dto.CopyAuthorityInput:
    properties:
      authorityId:
        example: "888"
        type: string
      authorityName:
        example: test
        type: string
      oldAuthorityId:
        example: "2"
        type: string
      parentId:
        example: "1"
        type: string
    required:
    - authorityId
    - authorityName
    - oldAuthorityId
    - parentId
    type: object
  dto.CreateAuthorityInput:
    properties:
      authorityId:
        example: "888"
        type: string
      authorityName:
        example: test
        type: string
      parentId:
        example: "1"
        type: string
    required:
    - authorityId
    - authorityName
    - parentId
    type: object
  dto.DelAuthorityInput:
    properties:
      authorityId:
        example: "888"
        type: string
    required:
    - authorityId
    type: object
  dto.DemoInput:
    properties:
      age:
        example: 20
        type: integer
      name:
        example: 姓名
        type: string
      passwd:
        example: "123456"
        type: string
    required:
    - age
    - name
    - passwd
    type: object
  dto.LoginInput:
    properties:
      captcha:
        type: string
      captchaId:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  middleware.Response:
    properties:
      data:
        type: object
      errmsg:
        type: string
      errno:
        type: integer
      stack:
        type: object
      trace_id:
        type: object
    type: object
  model.SysApi:
    properties:
      apiGroup:
        type: string
      description:
        type: string
      method:
        type: string
      path:
        type: string
    type: object
  model.SysAuthority:
    properties:
      authorityId:
        type: string
      authorityName:
        type: string
      children:
        items:
          $ref: '#/definitions/model.SysAuthority'
        type: array
      createdAt:
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/model.SysAuthority'
        type: array
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
      parentId:
        type: string
      updatedAt:
        type: string
    type: object
  model.SysBaseMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/model.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
      component:
        type: string
      createdAt:
        type: string
      defaultMenu:
        type: boolean
      hidden:
        type: boolean
      icon:
        type: string
      id:
        type: integer
      keepAlive:
        type: boolean
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.SysBaseMenuParameter'
        type: array
      parentId:
        type: string
      path:
        type: string
      show:
        type: boolean
      sort:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  model.SysBaseMenuParameter:
    properties:
      key:
        type: string
      sysBaseMenuID:
        type: integer
      type:
        type: string
      value:
        type: string
    type: object
  model.SysUser:
    properties:
      authority:
        $ref: '#/definitions/model.SysAuthority'
        type: object
      authorityId:
        type: string
      createdAt:
        type: string
      email:
        type: string
      headerImg:
        type: string
      id:
        type: integer
      nickName:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
      user_name:
        type: string
      uuid:
        type: string
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        type: string
      menus:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        type: string
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        type: string
      path:
        type: string
    type: object
  request.ChangePasswordStruct:
    properties:
      newPassword:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  request.Empty:
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        type: string
    type: object
  request.GetById:
    properties:
      id:
        type: number
    type: object
  request.PageInfo:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
    type: object
  request.Register:
    properties:
      authorityId:
        type: string
      email:
        type: string
      headerImg:
        type: string
      nickName:
        type: string
      passWord:
        type: string
      phone:
        type: string
      userName:
        type: string
    type: object
  request.SearchApiParams:
    properties:
      apiGroup:
        type: string
      desc:
        type: boolean
      description:
        type: string
      method:
        type: string
      orderKey:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      path:
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        type: string
      uuid:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  license: {}
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID修改ID,api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID,api路径, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除api
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 旧角色id, 新权限id, 新权限名, 新父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CopyAuthorityInput'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拷贝成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 拷贝角色
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAuthorityInput'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - Authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DelAuthorityInput'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - Authority
  /authority/updateAuthority:
    put:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - Authority
  /base/captcha:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 手机号
        in: formData
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      summary: 生成短信验证码
      tags:
      - Base
  /base/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      operationId: /base/login
      parameters:
      - description: body
        in: body
        name: polygon
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /base/picCaptcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      summary: 生成图片验证码
      tags:
      - Base
  /base/register:
    post:
      parameters:
      - description: 用户名, 昵称, 手机号，邮箱，密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - Base
  /base/wechatCaptcha:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 微信openID
        in: formData
        name: openId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      summary: 生成微信验证码
      tags:
      - Base
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - Casbin
  /casbin/updateCasbin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色api权限
      tags:
      - Casbin
  /demo/bind:
    post:
      consumes:
      - application/json
      description: 测试数据绑定
      operationId: /demo/bind
      parameters:
      - description: body
        in: body
        name: polygon
        required: true
        schema:
          $ref: '#/definitions/dto.DemoInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.DemoInput'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 测试数据绑定
      tags:
      - Demo
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加menu和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /user/ListPage:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/changePassword:
    put:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/info:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登出成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
